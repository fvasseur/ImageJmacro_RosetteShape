

inImage = getDirectory("Choose the input folder");
inResult = getDirectory("Choose the output folder");
images = getFileList(inImage);



// START NEW OR CONTINUE SELECTION
pathContinued = inResult + "Log.txt";
if(File.exists(pathContinued)) {
	filestring=File.openAsString(pathContinued);
	rows=split(filestring, "\n");
	x=newArray(rows.length);
	for(b=0; b<rows.length; b++)
	{
	columns=split(rows[b],"\t");
	g=parseInt(columns[0]) + 1;
	} 
		}
	else
		{
		g = 0;
		}

// CORE
for(i = g ; i < images.length; i++)
{
	inputPath = inImage + images[i];       
	open(inputPath);
	run("Duplicate...", "title=tray0.JPG");

Date = "yyyymmdd";
nameOfTray0 = 0;
Dialog.create("RAPA_macro");
Dialog.addString("Date: ", Date);
Dialog.show();
Date = Dialog.getString();

nameOfTray0 = "TX";
Dialog.create("RAPA_macro");
Dialog.addString("Tray ID: ", nameOfTray0);
Dialog.show();
nameOfTray = Dialog.getString();

	propres = (i / images.length) * 100;
	print(propres + "% of images done");
	lab = Date + " " + nameOfTray;
	print(lab)

Dialog.create("RAPA_macro");
Dialog.addChoice("Do you have a scale calibrator?", newArray("no", "yes")); 
Dialog.show();
Output_calib = Dialog.getChoice();

Output_calib = "no";

if (Output_calib=="yes")
{
	setTool("rectangle");
	Dialog.create("RAPA_macro");
	selectionString = "Draw a rectangle around the scale calibrator and press OK.";
	waitForUser(selectionString);
	run("Duplicate...", "title=calibrator.JPG");
	run("Canvas Size...", "width=600 height=600 position=Center");
	selectWindow("calibrator.JPG");
	rename(Date + "_" + nameOfTray + "_calibrator");
	setTool(2);
	Dialog.create("Calibrator selection");
	selectionString = "Select calibrator and press OK.";
	waitForUser(selectionString);
	run("Add to Manager");	
	run("Set Measurements...", "area perimeter shape display redirect=None decimal=6");
	roiManager("Select", 0);
	run("Measure");
	setResult("Solidity", 0, "NaN");
	selectWindow("ROI Manager");
	roiManager("reset");
	run("Close");
	run("Close");
	run("Select None");
}
else
{	
run("Set Measurements...", "area perimeter shape display redirect=None decimal=6");
run("Measure");
run("Clear Results");
}


selectWindow("tray0.JPG");
setTool("rectangle");
Dialog.create("RAPA_macro");
selectionString = "Define the tray position and press OK.";
waitForUser(selectionString);
run("Duplicate...", "title=tray.JPG");
selectWindow("tray.JPG");
run("Duplicate...", "title=mask.JPG");
run("Invert");

// Color Thresholder 2.0.0-rc-8/1.49c
// Autogenerated macro, single images only!
setBatchMode(true);
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
run("HSB Stack");
run("Convert Stack to Images");
selectWindow("Hue");
rename("0");
selectWindow("Saturation");
rename("1");
selectWindow("Brightness");
rename("2");
min[0]=178;
max[0]=255;
filter[0]="pass";
min[1]=35;
max[1]=255;
filter[1]="pass";
min[2]=80;
max[2]=255;
filter[2]="pass";
for (l=0;l<3;l++){
  selectWindow(""+l);
  setThreshold(min[l], max[l]);
  run("Convert to Mask");
  if (filter[l]=="stop")  run("Invert");
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (l=0;l<3;l++){
  selectWindow(""+l);
  close();
}
selectWindow("Result of 0");
close();
selectWindow("Result of Result of 0");
rename(a);
// Colour Thresholding-------------


run("Remove Outliers...", "radius=2 threshold=60 which=Bright");
run("Remove Outliers...", "radius=4 threshold=50 which=Dark");
setBatchMode(false);


setOption("BlackBackground", true);
run("Make Binary");
run("Create Selection");
run("Add to Manager");
roiManager("Show All with labels");
selectWindow("tray.JPG");
roiManager("Select", 0);
run("Clear Outside");
setOption("BlackBackground", true);
setBackgroundColor(0, 0, 0);

selectWindow("tray.JPG");
roiManager("Show All with labels");

setBatchMode(true);

Dialog.create("RAPA_macro");
Dialog.addChoice("Which analysis do you want to perform? ", newArray("automatic", "manual")); 
Dialog.show();
analysis = Dialog.getChoice();



//////////////////////////////////////////////////////////
//				automatic analysis
//////////////////////////////////////////////////////////

if(analysis=="automatic")
{


x = 0;
y = 0;
width0 = getWidth();
height0 = getHeight();
width = getWidth()/10;
height = getHeight()/6;
spacing = 0;
numRow = 6;
numCol = 10;

for(iii = 0; iii < numRow; iii++)
{
for(jjj = 0; jjj < numCol; jjj++)
{
xOffset = jjj * (width + spacing);
//print(xOffset);
yOffset = iii * (height + spacing);
//print(yOffset);
makeRectangle(x + xOffset, y + yOffset, width, height);
roiManager("Add");
} 
}



numberOfIteration = 60;

for (k = 1 ; k <= numberOfIteration; k++)
{
// select a rosette, label it and save data
		selectWindow("tray.JPG");
		roiManager("Show All with labels");

			if(k<=10)
			{
			k2 = k;
			nameOfPlant0 = "A" + k2;
			//print(nameOfPlant0);
			}
			else
			{
				if(k<=20)
				{
				k2 = -10 + k;			
				nameOfPlant0 = "B" + k2;	
				//print(nameOfPlant0);					
				}
				else
				{
					if(k<=30)
					{
					k2 = -20 + k;
					nameOfPlant0 = "C" + k2;
					//print(nameOfPlant0);						
					}
					else
					{
						if(k<=40)
						{
						k2 = -30 + k;						
						nameOfPlant0 = "D" + k2;	
						//print(nameOfPlant0);					
						}
						else
						{
							if(k<=50)
							{
							k2 = -40 + k;
							nameOfPlant0 = "E" + k2;
							//print(nameOfPlant0);													
							}
							else
							{
							k2 = -50 + k;
							nameOfPlant0 = "F" + k2;					
							//print(nameOfPlant0);	
							}
						}
					}
				
				}
		}

		nameOfPlant = nameOfPlant0;
			
		selectWindow("mask.JPG");
		run("Duplicate...", "title=selection3.JPG");
		run("8-bit");	
		roiManager("Select", k);
		run("Duplicate...", "title=selection4.JPG");
		rename(Date + "_" + nameOfTray + "_" + nameOfPlant + ".jpg");
		run("Canvas Size...", "width=width height=height position=Center");
		saveAs("JPG" , inResult + Date + "_" + nameOfTray + "_" + nameOfPlant + ".jpg");
		selectWindow(Date + "_" + nameOfTray + "_" + nameOfPlant + ".jpg");
		run("8-bit");		
		run("Make Binary");
		run("Create Selection");
		run("Add to Manager");
		roiManager("Select", 61);
		run("Set Measurements...", "area perimeter shape display redirect=None decimal=6");
		run("Measure");							
		nbr = nResults;
		for (inc=0; inc<nbr; inc++)
		{
			setResult("Solidity", inc, 0);
			setResult("Tray_width", inc, width0);
			setResult("Tray_height", inc, height0);				
		}		
	
		roiManager("Select", 61);
		roiManager("Delete");
		selectWindow(Date + "_" + nameOfTray + "_" + nameOfPlant + ".jpg");	
		run("Close");

	pathContinued2 = inResult + "Morphological_data.xls";
	if(File.exists(pathContinued2)) 
	{
	u = nResults;
	lineseparator = "\n";
	cellseparator = ",\t";
	lines=split(File.openAsString(pathContinued2), lineseparator);
	v = lines.length;	
	
	for (o=1; o<v; o++)
	{
		items=split(lines[o], cellseparator);
		setResult("Label", o + u - 1, items[1]);
		setResult("Area", o + u - 1, items[2]);
		setResult("Perim.", o + u - 1, items[3]);
		setResult("Circ.", o + u - 1, items[4]);
		setResult("AR", o + u - 1, items[5]);
		setResult("Round", o + u - 1, items[6]);
		setResult("Solidity", o + u - 1, items[7]);
		setResult("Tray_width", o + u - 1, items[8]);
		setResult("Tray_height", o + u - 1, items[9]);				
	}

	     	
		updateResults();
		saveAs("Results", inResult + "Morphological_data.xls");	
		saveAs("Results", inResult + Date + "_" + nameOfTray + "_Morphological_data.xls");	
		selectWindow("Results");
		run("Close");
	}
	else
	{
		saveAs("Results", inResult + "Morphological_data.xls");
		saveAs("Results", inResult + Date + "_" + nameOfTray + "_Morphological_data.xls");	
		selectWindow("Results");
		run("Close");
	}		

	}
setBatchMode(false);
}





//////////////////////////////////////////////////////////
//				automatic 30-mer analysis
//////////////////////////////////////////////////////////

if(analysis=="manual")
{
Dialog.create("RAPA_macro");
Dialog.addNumber("How many individuals do you want to extract? ", 1);
Dialog.show();
numberOfIteration = Dialog.getNumber();

print("manual");

for (k = 1 ; k <= numberOfIteration; k++)
{
// select a rosette, label it and save data
		selectWindow("tray.JPG");
		run("Duplicate...", "title=selection.JPG");
		roiManager("Select", 0);
		run("Clear Outside");
		setOption("BlackBackground", true);
		setBackgroundColor(0, 0, 0);
		roiManager("Show All with labels");
		
		setTool(2);
		selectionString = "Select rosette and press OK.";
		waitForUser(selectionString);
		run("Add to Manager");
		roiManager("Select", 1);
		run("Clear Outside");
		setOption("BlackBackground", true);
		setBackgroundColor(0, 0, 0);
		roiManager("Show All with labels");
		roiManager("Select", 1);
		run("Duplicate...", "title=selection2.JPG");
		run("Canvas Size...", "width=1200 height=1200 position=Center");
		Dialog.create("Rosette selection");
		Dialog.addString("Label of the rosette", "A1");
		Dialog.show();
		nameOfPlant = Dialog.getString();	
		
		rename(Date + "_" + nameOfTray + "_" + nameOfPlant);	
		saveAs("tiff" , outImage + Date + "_" + nameOfTray + "_" + nameOfPlant);
		selectWindow(Date + "_" + nameOfTray + "_" + nameOfPlant + ".tif");
		run("Close");	
		print(nameOfPlant);
		selectWindow("selection.JPG");
		run("Close");				
			
		selectWindow("mask.JPG");
		run("Duplicate...", "title=selection3.JPG");
		run("8-bit");	
		roiManager("Select", 1);
		run("Duplicate...", "title=selection4.JPG");
		rename(Date + "_" + nameOfTray + "_" + nameOfPlant + ".JPG");
		run("Canvas Size...", "width=1200 height=1200 position=Center");
		selectWindow("selection3.JPG");
		run("Close");
		selectWindow(Date + "_" + nameOfTray + "_" + nameOfPlant + ".JPG");	
		run("8-bit");		
		run("Make Binary");
		run("Create Selection");
		run("Add to Manager");
		roiManager("Select", 2);
		run("Set Measurements...", "area perimeter shape display redirect=None decimal=6");
		run("Measure");							
		nbr = nResults;
		for (inc=0; inc<nbr; inc++)
		{
			setResult("Solidity", inc, "NaN");				
		}		
		selectWindow(Date + "_" + nameOfTray + "_" + nameOfPlant + ".JPG");
		run("Close");
	
		roiManager("Select", 2);
		roiManager("Delete");
		roiManager("Select", 1);
		roiManager("Delete");
		

	pathContinued2 = inResult + "Morphological_data.xls";
	if(File.exists(pathContinued2)) 
	{
	u = nResults;
	lineseparator = "\n";
	cellseparator = ",\t";
	lines=split(File.openAsString(pathContinued2), lineseparator);
	v = lines.length;	
	
	for (o=1; o<v; o++)
	{
		items=split(lines[o], cellseparator);
		setResult("Label", o + u - 1, items[1]);
		setResult("Area", o + u - 1, items[2]);
		setResult("Perim.", o + u - 1, items[3]);
		setResult("Circ.", o + u - 1, items[4]);
		setResult("AR", o + u - 1, items[5]);
		setResult("Round", o + u - 1, items[6]);
		setResult("Solidity", o + u - 1, "NaN");				
	}

	     	
		updateResults();
		saveAs("Results", inResult + "Morphological_data.xls");	
		selectWindow("Results");
		run("Close");
	}
	else
	{
		saveAs("Results", inResult + "Morphological_data.xls");
		selectWindow("Results");
		run("Close");
	}		
	}
}




//////////////////////////////////////////////
//		End of the tray analysis
//////////////////////////////////////////////


roiManager("reset");
selectWindow("ROI Manager");
run("Close All");

Dialog.create("RAPA_macro");
Dialog.addChoice("", newArray("continue", "abort"));
Dialog.show();
process = Dialog.getChoice();


if (process == "abort")
{
	tray = i - 1;
	print(tray);
	selectWindow("Log");
    saveAs("text", inResult + "Log.txt");
	run("Close");
	exit();						
}
else
{
	tray = i;
	print(tray);
	selectWindow("Log");
    saveAs("text", inResult + "Log.txt");
	run("Close");

}
}
				
	


















